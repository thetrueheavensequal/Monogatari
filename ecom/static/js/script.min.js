document.addEventListener('DOMContentLoaded', () => {
  if (typeof jQuery === 'undefined' || typeof Swiper === 'undefined') {
    console.error("Missing required libraries: jQuery or Swiper.");
    return;
  }

  const $ = jQuery;

  const initSwipers = () => {
    // Main Swiper
    new Swiper(".main-swiper", {
      slidesPerView: 3,
      spaceBetween: 80,
      speed: 700,
      loop: true,
      navigation: {
        nextEl: ".icon-arrow-right",
        prevEl: ".icon-arrow-left"
      },
      breakpoints: {
        300: { slidesPerView: 1, spaceBetween: 20 },
        768: { slidesPerView: 2, spaceBetween: 20 },
        1200: { slidesPerView: 3, spaceBetween: 80 }
      }
    });

    // Slideshow
    new Swiper(".slideshow", {
      slidesPerView: 1,
      spaceBetween: 0,
      speed: 1000,
      loop: true,
      navigation: {
        nextEl: ".icon-arrow-right",
        prevEl: ".icon-arrow-left"
      }
    });

    // Two column swiper
    new Swiper(".two-column-swiper .swiper", {
      slidesPerView: 1,
      loop: true,
      speed: 900,
      navigation: {
        nextEl: ".two-column-swiper .icon-arrow-right",
        prevEl: ".two-column-swiper .icon-arrow-left"
      }
    });

    // Overlay swiper
    new Swiper(".overlay-swiper", {
      slidesPerView: "auto",
      loop: true,
      navigation: {
        nextEl: ".icon-arrow-right",
        prevEl: ".icon-arrow-left"
      }
    });

    // Product carousel
    $(".product-carousel").each(function () {
      const id = $(this).attr("id");
      new Swiper(`#${id} .swiper`, {
        slidesPerView: 4,
        spaceBetween: 20,
        navigation: {
          nextEl: `#${id} .icon-arrow-right`,
          prevEl: `#${id} .icon-arrow-left`
        },
        breakpoints: {
          0: {
            slidesPerView: 2,
            spaceBetween: 20,
            pagination: {
              el: ".swiper-pagination",
              clickable: true
            }
          },
          999: {
            slidesPerView: 3,
            spaceBetween: 10
          },
          1366: {
            slidesPerView: 4,
            spaceBetween: 40
          }
        }
      });
    });

    // Product thumbnail & large slider
    const thumbSwiper = new Swiper(".product-thumbnail-slider", {
      slidesPerView: 3,
      spaceBetween: 20,
      direction: "vertical",
      breakpoints: {
        0: { direction: "horizontal" },
        992: { direction: "vertical" }
      }
    });

    new Swiper(".product-large-slider", {
      slidesPerView: 1,
      spaceBetween: 0,
      effect: "fade",
      thumbs: { swiper: thumbSwiper },
      pagination: {
        el: ".swiper-pagination",
        clickable: true
      }
    });

    // Review swiper
    new Swiper(".review-swiper", {
      slidesPerView: 1,
      spaceBetween: 20,
      loop: true,
      navigation: {
        nextEl: ".icon-arrow-right",
        prevEl: ".icon-arrow-left"
      },
      pagination: {
        el: ".swiper-pagination",
        clickable: true
      }
    });

    // Testimonial swiper
    new Swiper(".testimonial-swiper", {
      effect: "fade",
      fadeEffect: { crossFade: true },
      grabCursor: true,
      centeredSlides: true,
      loop: true,
      slidesPerView: 1,
      pagination: {
        el: ".testimonial-swiper-pagination",
        clickable: true
      },
      autoplay: {
        delay: 5000,
        disableOnInteraction: false
      },
      speed: 800
    });
  };

  const handleQuantityButtons = () => {
    $(".product-qty").each(function () {
      const $container = $(this);
      const $input = $container.find("input.quantity-input");

      $container.find(".quantity-right-plus").on("click", e => {
        e.preventDefault();
        let qty = parseInt($input.val()) || 0;
        $input.val(qty + 1);
      });

      $container.find(".quantity-left-minus").on("click", e => {
        e.preventDefault();
        let qty = parseInt($input.val()) || 0;
        if (qty > 0) $input.val(qty - 1);
      });
    });
  };

  const initJarallax = () => {
    jarallax(document.querySelectorAll(".jarallax"));
    jarallax(document.querySelectorAll(".jarallax-keep-img"), { keepImg: true });
  };

  const initTextFx = () => {
    $(".txt-fx").each(function () {
      const words = this.textContent.split(/\s/);
      let output = "";
      let delay = 0;

      words.forEach(word => {
        output += `<span class="word">`;
        for (let char of word) {
          output += `<span class='letter' style='transition-delay:${300 + 10 * delay}ms;'>${char}</span>`;
          delay++;
        }
        output += `</span><span class='letter' style='transition-delay:300ms;'>&nbsp;</span>`;
        delay++;
      });

      this.innerHTML = output;
    });
  };

  const toggleNavbarBackground = () => {
    if (window.scrollY >= 200) {
      $(".navbar.fixed-top").addClass("bg-black");
    } else {
      $(".navbar.fixed-top").removeClass("bg-black");
    }
  };

  const initIsotopeFilter = () => {
    $(".grid").each(function () {
      const $grid = $(this);
      const $buttons = $(".button-group");
      const initialFilter = $buttons.find(".is-checked").attr("data-filter") || "*";

      const iso = $grid.isotope({
        itemSelector: ".product-item",
        layoutMode: "fitRows",
        filter: initialFilter
      });

      $buttons.on("click", "a", function (e) {
        e.preventDefault();
        const filter = $(this).attr("data-filter");
        iso.isotope({ filter });
        $buttons.find(".is-checked").removeClass("is-checked");
        $(this).addClass("is-checked");
      });
    });
  };

  const initImageZoom = () => {
    $(".image-zoom").each(function () {
      const $el = $(this);
      const imageUrl = $el.attr("data-image");
      const scale = $el.attr("data-scale") || 1.5;

      $el.append('<div class="photo"></div>');
      const $photo = $el.children(".photo");
      $photo.css({ backgroundImage: `url(${imageUrl})` });

      $el.on("mouseover", () => {
        $photo.css({ transform: `scale(${scale})` });
      }).on("mouseout", () => {
        $photo.css({ transform: "scale(1)" });
      }).on("mousemove", e => {
        const originX = ((e.pageX - $el.offset().left) / $el.width()) * 100;
        const originY = ((e.pageY - $el.offset().top) / $el.height()) * 100;
        $photo.css({ transformOrigin: `${originX}% ${originY}%` });
      });
    });
  };

  const initSearchPopup = () => {
    $(".navbar").on("click", ".search-button", () => $(".search-popup").toggleClass("is-visible"));
    $(".navbar").on("click", ".btn-close-search", () => $(".search-popup").toggleClass("is-visible"));

    $(".search-popup-trigger").on("click", e => {
      e.preventDefault();
      $(".search-popup").addClass("is-visible");
      setTimeout(() => {
        $("#search-popup").focus();
      }, 350);
    });

    $(".search-popup").on("click", e => {
      if ($(e.target).is(".search-popup, .search-popup-close, .search-popup-close svg, .search-popup-close path")) {
        e.preventDefault();
        $(".search-popup").removeClass("is-visible");
      }
    });

    $(document).on("keyup", e => {
      if (e.which === 27) $(".search-popup").removeClass("is-visible");
    });
  };

  const initColorbox = () => {
    $(".youtube").colorbox({
      iframe: true,
      innerWidth: 960,
      innerHeight: 585
    });
  };

  const initSticky = () => {
    new hcSticky(".sticky-info", {
      stickTo: "section.single-product",
      innerTop: 200,
      responsive: {
        980: { disable: true }
      }
    });
  };

  const initPriceRangeDisplay = () => {
    const range = document.getElementById("price-range");
    const value = document.getElementById("price-value");
    if (range && value) {
      value.textContent = "₹" + range.value;
      range.addEventListener("input", () => {
        value.textContent = "₹" + range.value;
      });
    }
  };

  // Handle table responsiveness
  const tables = document.querySelectorAll('table');
  tables.forEach(table => {
    if (!table.parentElement.classList.contains('table-responsive')) {
      const wrapper = document.createElement('div');
      wrapper.classList.add('table-responsive');
      table.parentNode.insertBefore(wrapper, table);
      wrapper.appendChild(table);
    }
  });

  // Handle responsive images
  const images = document.querySelectorAll('img:not(.no-responsive)');
  images.forEach(img => {
    img.classList.add('img-fluid');
  });

  // Handle mobile menu
  const navbarToggler = document.querySelector('.navbar-toggler');
  const navbarCollapse = document.querySelector('.navbar-collapse');
  
  if (navbarToggler && navbarCollapse) {
    navbarToggler.addEventListener('click', () => {
      navbarCollapse.classList.toggle('show');
    });

    // Close mobile menu when clicking outside
    document.addEventListener('click', (e) => {
      if (!navbarCollapse.contains(e.target) && !navbarToggler.contains(e.target)) {
        navbarCollapse.classList.remove('show');
      }
    });
  }

  // Handle orientation changes
  window.addEventListener('orientationchange', () => {
    // Force reload of CSS transforms
    const elements = document.querySelectorAll('.transform-refresh');
    elements.forEach(el => {
      el.style.transform = 'none';
      setTimeout(() => {
        el.style.transform = '';
      }, 10);
    });
  });

  // Call all initializers
  initSwipers();
  handleQuantityButtons();
  initJarallax();
  initTextFx();
  initIsotopeFilter();
  initImageZoom();
  initSearchPopup();
  initColorbox();
  initSticky();
  initPriceRangeDisplay();
  toggleNavbarBackground();

  window.addEventListener("scroll", toggleNavbarBackground);
  window.addEventListener("load", () => $(".preloader").addClass("loaded"));

  $(".btn-nav").on("click tap", function () {
    $(".nav-content").toggleClass("showNav hideNav").removeClass("hidden");
    $(this).toggleClass("animated");
  });

  AOS.init({ duration: 1200, once: true });
});
